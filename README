This application provides a web service to support the web site of an internet radio station with information about the currently playing song. The main web site is a blog created with Radiant (http://radiantcms.org/). The Rails application is hosted on the same server, and accessed with the same URL followed by "/extras". The idea is to make various supporting Rails web services available as needed, hence the name "rails_extras".

In addition to the web service, the application handles the monitoring and storage of information about music played and number of listeners, which is required for reporting to various agencies that collect royalties for internet radio stations.

The data source is an XML file on the streaming server, which is hosted elsewhere. The Rails application uses the BackgrounDRb library (http://backgroundrb.rubyforge.org/) to check the XML file every 30 seconds. This process is initialized in lib/workers/get_info_worker.rb. From there, the method get_data is called in lib/icecast.rb ("Icecast" is the name of the streaming server).

The XML file on the streaming server provides two relevant pieces of data: the name of the song currently playing (including artist and title), and the number of listeners currently listening. All songs available to be played are previously stored in the application's MySQL database; the ID of the current song is looked up and stored with the time played and the number of listeners.

Normally the XML file will contain the name of one song. However, if the main music source is unavailable for some reason, a backup music source takes over. The backup music source is a continuous mix that loops until the main music source is restored. The mix consists of several songs, but the XML file will only contain the name of the mix. For this reason, the application has the ability to identify the actual song playing using a counter to determine where we are within the mix.

The data stored will be used for royalty reporting purposes. In addition, the song data stored in the application database includes information that may be of interest to a listener, such as the year the song was released. The web service uses the most recently stored data to provide this song information for the "now playing" section of the main web site. The web service is available at [main web site]/extras/now_playing.xml. An AJAX script is used on the main site to query the web service and refresh the display. 

The code in app/controllers/now_playing_controller.rb needs to skip over certain "songs" that aren't really songs, such as segments where the DJ is talking about the music, or a commercial or public service announcement. In those cases, the name of the last actual song played is displayed until a new song starts.

The controller also needs to handle error conditions. If the current song information is more than 1 minute old, this may indicate a problem with the streaming server. When this occurs, an e-mail is sent to the administrator.
